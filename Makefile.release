# This file is a nasty piece of work I use for building SQLiteJDBC
# across multiple architectures. Best to ignore it.

include Makefile.common

afsdir 		:= /afs/hcoop.net/user/c/cr/crawshaw
repo   		:= $(afsdir)/repo/sqlitejdbc
files  		:= $(afsdir)/files/sqlitejdbc

default: dist/$(sqlitejdbc).jar

dist/$(sqlitejdbc).jar: $(sqlitejdbc)-native.jar build/mac-universal.lib
	(cd build; jar uf $(sqlitejdbc)-native.jar *.lib)
	cp build/$(sqlitejdbc)-native.jar $@
	rm build/$(sqlitejdbc)-native.jar
	
$(sqlitejdbc)-native.jar:
	$(MAKE) build/$(sqlitejdbc)-native.jar
	
# dist/$(sqlitejdbc).jar: build/mac-universal.lib build/win-x86.lib build/linux-x86.lib build/linux-amd64.lib dist/$(sqlitejdbc)-pure.jar
# 	cp dist/$(sqlitejdbc)-pure.jar build/$(sqlitejdbc).jar
# 	(cd build; jar uf $(sqlitejdbc).jar *.lib)
# 	cp build/$(sqlitejdbc).jar $@
# 	rm build/$(sqlitejdbc).jar

dist/$(sqlitejdbc)-src.tgz:
	git archive --format=tar --prefix=$(sqlitejdbc)/ HEAD | gzip > $@

dist/$(sqlitejdbc)-bin.tgz: dist/$(sqlitejdbc).jar
	cp build/mac-universal.lib build/libsqlitejdbc.jnilib
	cp build/win-x86.lib build/sqlitejdbc.dll
	cp build/linux-x86.lib build/libsqlitejdbc.so
	$(MAKE) build/$(sqlitejdbc)-native.jar
	cd build; tar cfz ../$@ $(sqlitejdbc)-native.jar \
	    libsqlitejdbc.jnilib sqlitejdbc.dll libsqlitejdbc.so \

build/mac-universal.lib: precompiled/mac-universal.lib
	@mkdir -p dist build
	cp precompiled/mac-universal.lib build/mac-universal.lib

precompiled/mac-universal.lib:
	@mkdir -p dist build/Darwin-universal precompiled
	$(MAKE) os=Darwin arch=i386 native
	$(MAKE) os=Darwin arch=x86_64 native
	lipo -create build/Darwin-i386/$(Darwin_LIBNAME) \
	             build/Darwin-x86_64/$(Darwin_LIBNAME) \
	     -output $@

build/win-x86.lib: precompiled/win-x86.lib
	cp precompiled/win-x86.lib build/win-x86.lib

precompiled/win-x86.lib:
	make os=Win arch=i586 native
	cp build/Win-i586/$(Win_LIBNAME) precompiled/win-x86.lib

build/linux-x86.lib: precompiled/linux-x86.lib
	cp precompiled/linux-x86.lib build/linux-x86.lib

precompiled/linux-x86.lib:
	make arch=i386
	cp build/Default-i386/$(Default_LIBNAME) precompiled/linux-x86.lib

build/linux-amd64.lib: precompiled/linux-amd64.lib
	cp precompiled/linux-amd64.lib build/linux-amd64.lib
	
precompiled/linux-amd64.lib:
	make arch=amd64
	cp build/Default-amd64/$(Default_LIBNAME) precompiled/linux-amd64.lib
